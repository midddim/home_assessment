name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      grep:
        description: 'Run only tests matching this grep pattern (e.g. @smoke)'
        required: false
        default: ''
      run:
        description: 'Testomat.io Run ID (for linking results to a specific Run)'
        required: false
        default: ''
      testomatio:
        description: 'Testomat.io API token (used if not defined in secrets)'
        required: false
        default: ''
      tests:
        description: 'Testomat.io test IDs separated by | (e.g. Taf785fb9|T98ad9896)'
        required: false
        default: ''

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
    env:
      BASE_URL: ${{ vars.BASE_URL }}
      TESTOMATIO: ${{ github.event.inputs.testomatio || secrets.TESTOMATIO }}
      TESTOMATIO_RUN: ${{ github.event.inputs.run }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          if [ "${{ github.event.inputs.grep }}" != "" ]; then
            npx playwright test --grep "${{ github.event.inputs.grep }}"
          elif [ "${{ github.event.inputs.tests }}" != "" ]; then
            echo "Running specific tests from Testomat.io: ${{ github.event.inputs.tests }}"
            npx playwright test --grep "${{ github.event.inputs.tests }}"
          else
            npx playwright test
          fi
        continue-on-error: true
        env:
          TESTOMATIO: ${{ github.event.inputs.testomatio || secrets.TESTOMATIO }}
          TESTOMATIO_RUN: ${{ github.event.inputs.run }}

      - name: Check generated artifacts
        if: always()
        run: |
          echo "Checking for generated artifacts..."
          if [ -d "test-results" ]; then
            echo "Screenshots:"
            find test-results -name "*.png" -type f
            echo "Videos:"
            find test-results -name "*.webm" -type f
            echo "Traces:"
            find test-results -name "*.zip" -type f
          else
            echo "No test-results directory found"
          fi

      - name: Send test results to Testomat.io (if not using reporter)
        if: env.TESTOMATIO != '' && always()
        run: |
          echo "Uploading XML results to Testomat.io..."
          npx @testomatio/reporter xml test-results/results.xml
        env:
          TESTOMATIO: ${{ github.event.inputs.testomatio || secrets.TESTOMATIO }}
          TESTOMATIO_RUN: ${{ github.event.inputs.run }}

      - name: Upload artifacts to Testomat.io manually
        if: env.TESTOMATIO != '' && always()
        run: |
          if [ -d "test-results" ]; then
            echo "Manually uploading artifacts to Testomat.io..."
            
            # Upload screenshots
            find test-results -name "*.png" -type f | while read -r file; do
              echo "Uploading screenshot: $file"
              npx @testomatio/reporter upload "$file" --type screenshot
            done
            
            # Upload videos
            find test-results -name "*.webm" -type f | while read -r file; do
              echo "Uploading video: $file"
              npx @testomatio/reporter upload "$file" --type video
            done
            
            # Upload traces
            find test-results -name "*.zip" -type f | while read -r file; do
              echo "Uploading trace: $file"
              npx @testomatio/reporter upload "$file" --type trace
            done
          fi
        env:
          TESTOMATIO: ${{ github.event.inputs.testomatio || secrets.TESTOMATIO }}
          TESTOMATIO_RUN: ${{ github.event.inputs.run }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30
